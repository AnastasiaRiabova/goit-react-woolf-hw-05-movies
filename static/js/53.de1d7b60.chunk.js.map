{"version":3,"file":"static/js/53.de1d7b60.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/ErrorComponent/ErrorComponent.styled.js","components/ErrorComponent/ErrorComponent.jsx","components/LoadingWrapper/LoadingWrapper.jsx","pages/CastPage/CastPage.styled.js","pages/CastPage/CastPage.jsx","services/api.js","utils/createImageUrl.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledContainer = styled('div')`\n  width: 100%;\n\n  padding-left: 20px;\n  padding-right: 20px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n    padding-left: 60px;\n    padding-right: 60px;\n  }\n`;\n","import { StyledContainer } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <StyledContainer>{children}</StyledContainer>;\n};\n\nexport default Container;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled('div')`\n  padding: 20px;\n`;\n\nexport const Message = styled('p')`\n  color: red;\n  font-size: 20px;\n`;\n","import { Message, Wrapper } from './ErrorComponent.styled';\nimport Container from 'components/Container';\n\nconst ErrorComponent = ({ message }) => {\n  return (\n    <Container>\n      <Wrapper>\n        <Message>{message}</Message>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default ErrorComponent;\n","import Loader from '../Loader';\nimport ErrorComponent from '../ErrorComponent';\n\nconst LoadingWrapper = ({ children, isLoading, error = null }) => {\n  if (isLoading) return <Loader />;\n  if (error) return <ErrorComponent message={error} />;\n\n  return <>{children}</>;\n};\n\nexport default LoadingWrapper;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled('div')``;\n\nexport const List = styled('ul')`\n  display: grid;\n  gap: 30px;\n  grid-template-columns: repeat(2, 1fr);\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(5, 1fr);\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: repeat(8, 1fr);\n  }\n`;\n\nexport const Item = styled('li')``;\n\nexport const Image = styled('img')`\n  display: block;\n  height: 200px;\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const Name = styled('p')`\n  margin-top: 10px;\n`;\n\nexport const Character = styled('p')`\n  margin-top: 10px;\n`;\n","import ErrorComponent from 'components/ErrorComponent';\nimport LoadingWrapper from 'components/LoadingWrapper';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/api';\nimport { createImageUrl } from 'utils/createImageUrl';\nimport { Character, Image, Item, List, Name, Wrapper } from './CastPage.styled';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    setError(null);\n\n    getCast(movieId)\n      .then(({ cast }) => {\n        setCast(cast);\n      })\n      .catch(err => {\n        setError(err.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <LoadingWrapper isLoading={isLoading} error={error}>\n      <Wrapper>\n        {cast.length > 0 ? (\n          <List>\n            {cast.map(({ cast_id, character, name, profile_path }) => (\n              <Item key={cast_id}>\n                <Image\n                  src={\n                    !profile_path\n                      ? `${process.env.PUBLIC_URL}/no-image.svg`\n                      : createImageUrl(profile_path)\n                  }\n                  alt={name}\n                />\n                <Name>{name}</Name>\n                <Character>Character: {character}</Character>\n              </Item>\n            ))}\n          </List>\n        ) : (\n          <ErrorComponent message=\"There are no cast here\" />\n        )}\n      </Wrapper>\n    </LoadingWrapper>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\nimport { ACCESS_TOKEN, BASE_URL } from '../constants';\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    Authorization: `Bearer ${ACCESS_TOKEN}`,\n  },\n  params: {\n    language: 'en-US',\n  },\n});\n\nexport const getTrends = async () => {\n  const response = await api.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const findMovie = async query => {\n  const response = await api.get('/search/movie', {\n    params: { include_adult: false, query, page: 1 },\n  });\n  return response.data;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await api.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await api.get(`/movie/${movieId}/credits`);\n  return response.data;\n};\n\nexport const getReviews = async movieId => {\n  const response = await api.get(`/movie/${movieId}/reviews`);\n  return response.data;\n};\n","import { BASE_IMAGE_URL } from '../constants';\n\nexport const createImageUrl = path => BASE_IMAGE_URL + path;\n"],"names":["StyledContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","children","_jsx","Wrapper","Message","_templateObject2","message","Container","isLoading","_ref$error","error","Loader","ErrorComponent","_Fragment","List","Item","_templateObject3","Image","_templateObject4","Name","_templateObject5","Character","_templateObject6","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","setIsLoading","_useState5","_useState6","setError","movieId","useParams","useEffect","getCast","then","catch","err","finally","LoadingWrapper","length","map","_ref2","cast_id","character","name","profile_path","_jsxs","src","createImageUrl","concat","process","alt","api","axios","baseURL","BASE_URL","headers","Authorization","ACCESS_TOKEN","params","language","getTrends","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","data","stop","apply","arguments","findMovie","_callee2","query","_context2","include_adult","page","_x","getMovieById","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","getReviews","_ref5","_callee5","_context5","_x4","path","BASE_IMAGE_URL"],"sourceRoot":""}